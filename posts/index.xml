<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on kele.codes</title>
    <link>https://kele.codes/posts/</link>
    <description>Recent content in Posts on kele.codes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Jul 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kele.codes/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>About Adding Features (part 1)</title>
      <link>https://kele.codes/2021/07/about-adding-features-1/</link>
      <pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kele.codes/2021/07/about-adding-features-1/</guid>
      <description>Teaser One of the most clever C tricks I&amp;rsquo;ve ever seen is the following:
#define BUILD_BUG_ON_ZERO(e) (sizeof(struct { int:-!!(e); })) The BUILD_BUG_ON_ZERO(e) macro evaluates whether the compile-time value of e is non-zero (yes, the name is misleading). If yes, it results in a compiler error, therefore breaking the build. This trick leverages a few obscure properties of C, one of them being lack of support for bitfields of a negative width (who would&amp;rsquo;ve thought?</description>
    </item>
    
    
    
    
    
    <item>
      <title>Proxy server in Rust (part 2)</title>
      <link>https://kele.codes/2017/06/proxy-server-in-rust-part-2/</link>
      <pubDate>Sun, 18 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kele.codes/2017/06/proxy-server-in-rust-part-2/</guid>
      <description>First draft and the basics of Rust.</description>
    </item>
    
    
    
    <item>
      <title>Proxy server in Rust (part 1)</title>
      <link>https://kele.codes/2017/06/proxy-server-in-rust-part-1/</link>
      <pubDate>Sat, 17 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kele.codes/2017/06/proxy-server-in-rust-part-1/</guid>
      <description>Writing a simple proxy server in Rust to address my bad productivity habits.</description>
    </item>
    
    
  </channel>
</rss>
